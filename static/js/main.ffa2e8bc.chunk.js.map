{"version":3,"sources":["component/Circle/Circle.tsx","component/Cross/Cross.tsx","component/Result/Result.tsx","component/Field/Field.tsx","component/Login/Login.tsx","App.tsx","index.tsx"],"names":["Circle","viewBox","cx","cy","r","fill","stroke","strokeWidth","Cross","className","d","Result","this","props","firstPlayerScore","secondPlayerScore","firstPlayerName","secondPlayerName","React","Component","Field","state","fieldArray","atributeChecker","winnerLine","disabled","scoreChecer","s","setState","newWinnerLine","calculateWinner","pop","drowAtribure","i","newArray","every","item","squares","lines","length","a","b","c","Number","clearField","newGame","_prevP","prewS","toString","map","index","onClick","type","Login","userFName","userSName","isFNameValid","isSNameValid","inputHandler","event","target","name","value","handleSubmit","preventDefault","onLogin","onSubmit","onChange","autoComplete","required","App","loggedIn","login","user1Name","user2Name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffa2e8bc.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Circle : React.FC = () => {\n  return (\n    <svg viewBox=\"0 0 100 100\">\n      <circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"transparent\" stroke=\"#c4c5c5\" strokeWidth=\"7\"></circle>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport const Cross : React.FC = () => {\n  return (\n    <svg viewBox=\"10 10 35 40\">\n      <path className=\"close-x\" d=\"M 15,15 L 40,40 M 40,15 L 15,40\" />\n    </svg>\n  );\n};\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable react/no-unused-state */\n\nimport React from 'react';\nimport './Result.scss';\n\ninterface Props {\n  firstPlayerScore: number;\n  secondPlayerScore: number;\n  firstPlayerName: string;\n  secondPlayerName: string;\n}\n\nexport class Result extends React.Component<Props, {}> {\n  render(): React.ReactNode {\n    const {\n      firstPlayerScore,\n      secondPlayerScore,\n      firstPlayerName,\n      secondPlayerName,\n    } = this.props;\n\n    return (\n      <div className=\"Result\">\n        <div className=\"Result__title\">\n          Score\n        </div>\n\n        <div className=\"Result__playerScore\">\n          {firstPlayerName}\n          {': '}\n          {firstPlayerScore}\n        </div>\n\n        <div className=\"Result__playerScore\">\n          {secondPlayerName}\n          {': '}\n          {secondPlayerScore}\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Circle } from '../Circle/Circle';\nimport { Cross } from '../Cross/Cross';\nimport { Result } from '../Result/Result';\n\nimport './Field.scss';\n\ninterface State {\n  fieldArray: number[];\n  atributeChecker: number;\n  firstPlayerScore: number;\n  secondPlayerScore: number;\n  winnerLine: number;\n  disabled: boolean;\n}\n\ninterface Props {\n  firstPlayerName: string;\n  secondPlayerName: string;\n  newGame(): void;\n}\n\nexport class Field extends React.Component<Props, {}> {\n  state: State = {\n    fieldArray: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    atributeChecker: 0,\n    firstPlayerScore: 0,\n    secondPlayerScore: 0,\n    winnerLine: 0,\n    disabled: false,\n  };\n\n  componentDidUpdate(_prevP: Props, prewS: State) {\n    if (prewS.fieldArray.toString() !== this.state.fieldArray.toString()) {\n      if (this.calculateWinner(this.state.fieldArray) !== null) {\n        (this.state.atributeChecker - 1) % 2 === 0\n          ? this.scoreChecer('x')\n          : this.scoreChecer('o');\n      }\n    }\n  }\n\n  scoreChecer = (s: string) => {\n    if (s === 'x') {\n      this.setState((state: State) => {\n        const newWinnerLine = this.calculateWinner(state.fieldArray);\n\n        return {\n          firstPlayerScore: state.firstPlayerScore + 1,\n          winnerLine: newWinnerLine?.pop(),\n          disabled: true,\n        };\n      });\n    } else {\n      this.setState((state: State) => {\n        const newWinnerLine = this.calculateWinner(state.fieldArray);\n\n        return {\n          secondPlayerScore: state.firstPlayerScore + 1,\n          winnerLine: newWinnerLine?.pop(),\n          disabled: true,\n        };\n      });\n    }\n  };\n\n  drowAtribure = (i: number) => {\n    if (this.state.fieldArray[i] === 0) {\n      if (this.state.atributeChecker % 2 === 0) {\n        this.setState((state: State) => {\n          const newArray = [...state.fieldArray];\n\n          newArray[i] = 1;\n\n          return {\n            fieldArray: newArray,\n            atributeChecker: state.atributeChecker + 1,\n          };\n        });\n      } else {\n        this.setState((state: State) => {\n          const newArray = [...state.fieldArray];\n\n          newArray[i] = 2;\n\n          return {\n            fieldArray: newArray,\n            atributeChecker: state.atributeChecker + 1,\n          };\n        });\n      }\n    }\n\n    if (this.state.fieldArray.every((item) => item !== 0)) {\n      this.setState({\n        disabled: true,\n      });\n    }\n  };\n\n  calculateWinner = (squares: number[]) => {\n    const lines = [\n      [0, 1, 2, 1],\n      [3, 4, 5, 2],\n      [6, 7, 8, 3],\n      [0, 3, 6, 4],\n      [1, 4, 7, 5],\n      [2, 5, 8, 6],\n      [0, 4, 8, 7],\n      [2, 4, 6, 8],\n    ];\n\n    for (let i = 0; i < lines.length; i += 1) {\n      const [a, b, c] = lines[i];\n\n      if (Number(squares[a]) === Number(squares[b])\n        && Number(squares[b]) && Number(squares[a]) && Number(squares[c])\n        && Number(squares[a]) === Number(squares[c])\n        && Number(squares[b]) === Number(squares[c])) {\n        return lines[i];\n      }\n    }\n\n    return null;\n  };\n\n  clearField = () => {\n    this.setState({\n      fieldArray: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      atributeChecker: 0,\n      winnerLine: 0,\n      disabled: false,\n    });\n  };\n\n  newGame = () => {\n    this.setState({\n      fieldArray: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      atributeChecker: 0,\n      firstPlayerScore: 0,\n      secondPlayerScore: 0,\n      winnerLine: 0,\n      disabled: false,\n    });\n\n    this.props.newGame();\n  };\n\n  render() {\n    const {\n      fieldArray,\n      firstPlayerScore,\n      secondPlayerScore,\n    } = this.state;\n\n    const { firstPlayerName, secondPlayerName } = this.props;\n\n    return (\n      <div className=\"Field\">\n        <div className={`Field-container winner${this.state.winnerLine}`}>\n          {fieldArray.map((item: number, index: number) => {\n            return (\n              <div\n                key={index}\n                onClick={() => !this.state.disabled && this.drowAtribure(index)}\n                className=\"Field__block\"\n              >\n                {item === 1 && (\n                  <Cross />\n                )}\n\n                {item === 2 && (\n                  <Circle />\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"nav-info-container\">\n          <Result\n            firstPlayerScore={firstPlayerScore}\n            secondPlayerScore={secondPlayerScore}\n            firstPlayerName={firstPlayerName}\n            secondPlayerName={secondPlayerName}\n          />\n\n          {this.state.disabled && (\n            <div className=\"button-container\">\n              <button type=\"button\" onClick={() => this.newGame()} className=\"button-nav button\">\n                New game\n              </button>\n\n              <button type=\"button\" onClick={() => this.clearField()} className=\"button-nav button\">\n                New round\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport './Login.scss';\n\ninterface State {\n  userFName?: string;\n  userSName?: string;\n  isFNameValid?: boolean;\n  isSNameValid?: boolean;\n}\n\ninterface Props {\n  onLogin(arg1: string, arg2: string): void;\n}\n\nexport class Login extends React.Component<Props, State> {\n  state: State = {\n    userFName: '',\n    userSName: '',\n    isFNameValid: false,\n    isSNameValid: false,\n  };\n\n  inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { userFName, userSName } = this.state;\n\n    if (userFName && userSName) {\n      this.props.onLogin(userFName, userSName);\n    }\n\n    return true;\n  };\n\n  render(): React.ReactNode {\n    const { userFName, userSName } = this.state;\n\n    return (\n      <div className=\"Login\">\n        <form\n          className=\"Login__form\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"Login__input-container\">\n            <div className=\"Login__lable\">\n              Type the name of the first player:\n            </div>\n\n            <input\n              type=\"text\"\n              name=\"userFName\"\n              className=\"Login__input\"\n              value={userFName}\n              onChange={this.inputHandler}\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n\n          <div className=\"Login__input-container\">\n            <div className=\"Login__lable\">\n              Type the name of the second player:\n            </div>\n\n            <input\n              type=\"text\"\n              name=\"userSName\"\n              className=\"Login__input\"\n              value={userSName}\n              onChange={this.inputHandler}\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"Login__button button\"\n          >\n            <span>\n              Start the game\n            </span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport './App.scss';\nimport { Field } from './component/Field/Field';\nimport { Login } from './component/Login/Login';\n\ninterface State {\n  firstPlayerName: string;\n  secondPlayerName: string;\n  loggedIn: boolean;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    firstPlayerName: '',\n    secondPlayerName: '',\n    loggedIn: false,\n  };\n\n  login = (user1Name: string, user2Name: string) => {\n    this.setState({\n      firstPlayerName: user1Name,\n      secondPlayerName: user2Name,\n      loggedIn: true,\n    });\n  };\n\n  newGame = () => {\n    this.setState({\n      firstPlayerName: '',\n      secondPlayerName: '',\n      loggedIn: false,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { loggedIn, firstPlayerName, secondPlayerName } = this.state;\n\n    return (\n      <div className=\"Aplication\">\n        {!loggedIn\n          ? (\n            <Login\n              onLogin={this.login}\n            />\n          )\n          : (\n            <Field\n              firstPlayerName={firstPlayerName}\n              secondPlayerName={secondPlayerName}\n              newGame={this.newGame}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}